<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
           	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:annotation-config />
	<context:property-placeholder location="WEB-INF/ogp.properties,classpath*:org/OpenGeoPortal/**/*.properties" />

	<beans:bean id="proxy.simple" class="org.OpenGeoPortal.Proxy.GenericProxyImpl" />
	<beans:bean id="userContext.ogp" class="org.OpenGeoPortal.Security.OgpUserContextImpl" />
	<beans:bean id="userDetailsMapper.custom" class="org.OpenGeoPortal.Security.SimpleLdapUserDetailsMapper" >
		<beans:property name="admins" value="${admins}" />
	</beans:bean>

	<!-- misc -->
	<beans:bean id="jsonpCallbackFilter" class="org.OpenGeoPortal.Utilities.JsonpCallbackFilter" />
	
	<beans:bean id="imageHandler" class="org.OpenGeoPortal.Proxy.ImageHandlerImpl" scope="prototype" />
	<beans:bean id="imageCompositor" class="org.OpenGeoPortal.Proxy.ImageCompositorImpl" scope="prototype" />
	<beans:bean id="imageDownloader" class="org.OpenGeoPortal.Proxy.ImageDownloaderImpl" scope="prototype" />

	<beans:bean id="exportHandler.geocommons" class="org.OpenGeoPortal.Export.GeoCommons.GeoCommonsExportHandlerImpl" scope="prototype"/>
	<beans:bean id="exporter.geocommons" class="org.OpenGeoPortal.Export.GeoCommons.GeoCommonsExporterImpl" scope="prototype"/>
	<beans:bean id="restClient.geocommons" class="org.OpenGeoPortal.Export.GeoCommons.GeoCommonsJsonClient" scope="prototype" />
	
	<beans:bean id="requestStatusManager"
		class="org.OpenGeoPortal.Download.RequestStatusManagerImpl" />

	<beans:bean id="cleanupDirectory.download"
		class="org.OpenGeoPortal.Utilities.CleanupDirectoryImpl" />
	<beans:bean id="urlShortener.Google"
		class="org.OpenGeoPortal.Utilities.UrlShortenerGoogle">
		<beans:property name="searchConfigRetriever" ref="configRetriever.search" />
	</beans:bean>

	<beans:bean id="layerInfoRetriever.solr"
		class="org.OpenGeoPortal.Metadata.SolrLayerInfoRetriever">
		<beans:property name="searchConfigRetriever" ref="configRetriever.search" />
		<beans:property name="solrClient" ref="solrClient.solrJ" />
	</beans:bean>

	<beans:bean id="metadataRetriever.solr" class="org.OpenGeoPortal.Download.MetadataFromSolr" />

	<beans:bean id="configRetriever.download"
		class="org.OpenGeoPortal.Download.Config.OgpDownloadConfigRetriever">
		<beans:property name="resource" value="resources/ogpDownloadConfig.json" />
	</beans:bean>

	<beans:bean id="configRetriever.search" class="org.OpenGeoPortal.Solr.OgpConfigRetriever">
		<beans:property name="resource" value="resources/ogpConfig.json" />
	</beans:bean>

	<beans:bean id="solrClient.solrJ" class="org.OpenGeoPortal.Solr.SolrJClient">
		<beans:constructor-arg ref="configRetriever.search" />
	</beans:bean>

	<beans:bean id="quickDownload" class="org.OpenGeoPortal.Utilities.QuickWfsDownload"/>
	
	<beans:bean id="directoryRetriever.simple" class="org.OpenGeoPortal.Utilities.GetDirectory">
		<beans:property name="resource" value="WEB-INF/ogp.properties" />
	</beans:bean>

	<beans:bean id="downloadPackager"
		class="org.OpenGeoPortal.Download.DownloadPackagerImpl" />

	<beans:bean id="downloadHandler"
		class="org.OpenGeoPortal.Download.DownloadHandlerImpl" />
	<!-- http requesters -->
	<beans:bean id="httpRequester.generic"
		class="org.OpenGeoPortal.Utilities.Http.HttpComponentsHttpRequester"
		scope="prototype">
		<beans:property name="ogpHttpClient" ref="httpClient.pooling" />
	</beans:bean>

	<beans:bean id="httpRequester.allTrustingCert"
		class="org.OpenGeoPortal.Utilities.Http.HttpComponentsHttpRequester"
		scope="prototype">
		<beans:property name="ogpHttpClient" ref="httpClient.pooling.allTrusting" />
	</beans:bean>

	<beans:bean id="httpClient.pooling" class="org.OpenGeoPortal.Utilities.Http.PoolingHttpClient" />
	<beans:bean id="httpClient.pooling.allTrusting" class="org.OpenGeoPortal.Utilities.Http.AllTrustingCertPoolingHttpClient" />

	<!-- Download methods -->
	<beans:bean id="downloadMethod.wms"
		class="org.OpenGeoPortal.Download.Methods.WmsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wfs"
		class="org.OpenGeoPortal.Download.Methods.WfsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wfs.proxied"
		class="org.OpenGeoPortal.Download.Methods.ProxiedWfsDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyTo" value="${ogp.proxyToWFS}" />
	</beans:bean>

	<beans:bean id="downloadMethod.kmlReflector"
		class="org.OpenGeoPortal.Download.Methods.KmlDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wcs"
		class="org.OpenGeoPortal.Download.Methods.WcsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wcs.proxied"
		class="org.OpenGeoPortal.Download.Methods.ProxiedWcsDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyTo" value="${ogp.proxyToWCS}" />
	</beans:bean>

	<beans:bean id="downloadMethod.allPublic.MIT"
		class="org.OpenGeoPortal.Download.Methods.MITDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.allTrustingCert" />
	</beans:bean>

	<beans:bean id="downloadMethod.email.HGL"
		class="org.OpenGeoPortal.Download.Methods.HGLEmailDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<!-- LayerDownloader -->
	<beans:bean id="layerDownloader.wfs"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wfs" />
	</beans:bean>
	<beans:bean id="layerDownloader.wcs"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wcs" />
	</beans:bean>
	<beans:bean id="layerDownloader.wfs.proxied"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wfs.proxied" />
	</beans:bean>
	<beans:bean id="layerDownloader.wcs.proxied"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wcs.proxied" />
	</beans:bean>
	<beans:bean id="layerDownloader.kml"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wms" />
	</beans:bean>
	<beans:bean id="layerDownloader.wms"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wms" />
	</beans:bean>
	<beans:bean id="layerDownloader.kml.reflector"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.kmlReflector" />
	</beans:bean>
	<!-- MIT specific -->
	<beans:bean id="layerDownloader.all.MIT"
		class="org.OpenGeoPortal.Download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.allPublic.MIT" />
	</beans:bean>

	<!-- HGL specific -->

	<beans:bean id="layerDownloader.email.HGL"
		class="org.OpenGeoPortal.Download.EmailLayerDownloader" scope="prototype">
		<beans:property name="emailDownloadMethod" ref="downloadMethod.email.HGL" />
	</beans:bean>

	<task:annotation-driven executor="executor" />

	<task:executor id="executor" pool-size="5" />
	<task:scheduler id="scheduler" pool-size="1" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="cleanupDirectory.download" method="cleanupDownloadDirectory"
			fixed-rate="300000" />
	</task:scheduled-tasks>
</beans:beans>
